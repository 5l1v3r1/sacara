#pragma once
#include <stdint.h>
uint8_t test_data[] = 
{
	0x90,0x90,0x90,0x90,	// NOP sleep
	0xC3					// RET
};

uint8_t test_vm_code[] = 
{
	0xCF,0xE,0x4,0x0,0x0,0x0,                // loc_00000000: VmPushImmediate 0x4 /* 0xCF0E04000000 */
	0xC7,0xF,                                // loc_00000006: VmAlloca  /* 0xC70F         */
	0xFD,0xD,0x0,0x0,                        // loc_00000008: VmPushVariable 0x0 /* 0xFD0D0000     */
	0xFD,0xD,0x1,0x0,                        // loc_0000000C: VmPushVariable 0x1 /* 0xFD0D0100     */
	0xFD,0xD,0x2,0x0,                        // loc_00000010: VmPushVariable 0x2 /* 0xFD0D0200     */
	0xFD,0xD,0x3,0x0,                        // loc_00000014: VmPushVariable 0x3 /* 0xFD0D0300     */
	0xCF,0xE,0x4,0x0,0x0,0x0,                // loc_00000018: VmPushImmediate 0x4 /* 0xCF0E04000000 */
	0xCF,0xE,0x28,0x0,0x0,0x0,               // loc_0000001E: VmPushImmediate 0x28 /* 0xCF0E28000000 */
	0x9C,0x6,                                // loc_00000024: VmCall  /* 0x9C06         */
	0xEC,0x3,                                // loc_00000026: VmHalt  /* 0xEC03         */
	0xCF,0xE,0x8,0x0,0x0,0x0,                // loc_00000028: VmPushImmediate 0x8 /* 0xCF0E08000000 */
	0xC7,0xF,                                // loc_0000002E: VmAlloca  /* 0xC70F         */
	0x2,0xB,0x0,0x0,                         // loc_00000030: VmPop 0x0 /* 0x020B0000     */
	0x2,0xB,0x1,0x0,                         // loc_00000034: VmPop 0x1 /* 0x020B0100     */
	0x2,0xB,0x2,0x0,                         // loc_00000038: VmPop 0x2 /* 0x020B0200     */
	0x2,0xB,0x3,0x0,                         // loc_0000003C: VmPop 0x3 /* 0x020B0300     */
	0xCF,0xE,0x0,0x0,0x0,0x0,                // loc_00000040: VmPushImmediate 0x0 /* 0xCF0E00000000 */
	0x2,0xB,0x4,0x0,                         // loc_00000046: VmPop 0x4 /* 0x020B0400     */
	0xCF,0xE,0x0,0x0,0x0,0x0,                // loc_0000004A: VmPushImmediate 0x0 /* 0xCF0E00000000 */
	0x2,0xB,0x5,0x0,                         // loc_00000050: VmPop 0x5 /* 0x020B0500     */
	0xCF,0xE,0x0,0x0,0x0,0x0,                // loc_00000054: VmPushImmediate 0x0 /* 0xCF0E00000000 */
	0x2,0xB,0x6,0x0,                         // loc_0000005A: VmPop 0x6 /* 0x020B0600     */
	0xCF,0xE,0x0,0x0,0x0,0x0,                // loc_0000005E: VmPushImmediate 0x0 /* 0xCF0E00000000 */
	0x2,0xB,0x7,0x0,                         // loc_00000064: VmPop 0x7 /* 0x020B0700     */
	0xFD,0xD,0x4,0x0,                        // loc_00000068: VmPushVariable 0x4 /* 0xFD0D0400     */
	0xFD,0xD,0x3,0x0,                        // loc_0000006C: VmPushVariable 0x3 /* 0xFD0D0300     */
	0xE,0xB,                                 // loc_00000070: VmAdd  /* 0x0E0B         */
	0xF1,0x5,                                // loc_00000072: VmNativeRead  /* 0xF105         */
	0x2,0xB,0x6,0x0,                         // loc_00000074: VmPop 0x6 /* 0x020B0600     */
	0xFD,0xD,0x5,0x0,                        // loc_00000078: VmPushVariable 0x5 /* 0xFD0D0500     */
	0xFD,0xD,0x1,0x0,                        // loc_0000007C: VmPushVariable 0x1 /* 0xFD0D0100     */
	0xE,0xB,                                 // loc_00000080: VmAdd  /* 0x0E0B         */
	0xF1,0x5,                                // loc_00000082: VmNativeRead  /* 0xF105         */
	0x2,0xB,0x7,0x0,                         // loc_00000084: VmPop 0x7 /* 0x020B0700     */
	0xFD,0xD,0x7,0x0,                        // loc_00000088: VmPushVariable 0x7 /* 0xFD0D0700     */
	0xFD,0xD,0x6,0x0,                        // loc_0000008C: VmPushVariable 0x6 /* 0xFD0D0600     */
	0x31,0x8,                                // loc_00000090: VmXor  /* 0x3108         */
	0xFD,0xD,0x4,0x0,                        // loc_00000092: VmPushVariable 0x4 /* 0xFD0D0400     */
	0xFD,0xD,0x3,0x0,                        // loc_00000096: VmPushVariable 0x3 /* 0xFD0D0300     */
	0xE,0xB,                                 // loc_0000009A: VmAdd  /* 0x0E0B         */
	0xB,0xF,                                 // loc_0000009C: VmNativeWrite  /* 0x0B0F         */
	0xCF,0xE,0x1,0x0,0x0,0x0,                // loc_0000009E: VmPushImmediate 0x1 /* 0xCF0E01000000 */
	0xFD,0xD,0x5,0x0,                        // loc_000000A4: VmPushVariable 0x5 /* 0xFD0D0500     */
	0xE,0xB,                                 // loc_000000A8: VmAdd  /* 0x0E0B         */
	0x2,0xB,0x5,0x0,                         // loc_000000AA: VmPop 0x5 /* 0x020B0500     */
	0xCF,0xE,0x1,0x0,0x0,0x0,                // loc_000000AE: VmPushImmediate 0x1 /* 0xCF0E01000000 */
	0xFD,0xD,0x4,0x0,                        // loc_000000B4: VmPushVariable 0x4 /* 0xFD0D0400     */
	0xE,0xB,                                 // loc_000000B8: VmAdd  /* 0x0E0B         */
	0x2,0xB,0x4,0x0,                         // loc_000000BA: VmPop 0x4 /* 0x020B0400     */
	0xFD,0xD,0x0,0x0,                        // loc_000000BE: VmPushVariable 0x0 /* 0xFD0D0000     */
	0xFD,0xD,0x5,0x0,                        // loc_000000C2: VmPushVariable 0x5 /* 0xFD0D0500     */
	0xE7,0x9,                                // loc_000000C6: VmCmp  /* 0xE709         */
	0xCF,0xE,0xDA,0x0,0x0,0x0,               // loc_000000C8: VmPushImmediate 0xDA /* 0xCF0EDA000000 */
	0x33,0x6,                                // loc_000000CE: VmJumpIfLess  /* 0x3306         */
	0xCF,0xE,0x0,0x0,0x0,0x0,                // loc_000000D0: VmPushImmediate 0x0 /* 0xCF0E00000000 */
	0x2,0xB,0x5,0x0,                         // loc_000000D6: VmPop 0x5 /* 0x020B0500     */
	0xFD,0xD,0x2,0x0,                        // loc_000000DA: VmPushVariable 0x2 /* 0xFD0D0200     */
	0xFD,0xD,0x4,0x0,                        // loc_000000DE: VmPushVariable 0x4 /* 0xFD0D0400     */
	0xE7,0x9,                                // loc_000000E2: VmCmp  /* 0xE709         */
	0xCF,0xE,0x68,0x0,0x0,0x0,               // loc_000000E4: VmPushImmediate 0x68 /* 0xCF0E68000000 */
	0x33,0x6,                                // loc_000000EA: VmJumpIfLess  /* 0x3306         */
	0x9A,0x9                                 // loc_000000EC: VmRet  /* 0x9A09         */
};